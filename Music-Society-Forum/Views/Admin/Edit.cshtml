@model Music_Society_Forum.Models.Post

@{
    ViewBag.Title = "Edit";
}

<h2 class="view-header">Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Review</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="Category_Id">
                    @* Post Category first in list *@
                    @if (ViewBag.PostCategory != null)
                    {
                        <option value="@ViewBag.PostCategory.Id">
                            @ViewBag.PostCategory.Name
                        </option>
                    }
                    @foreach (var cat in ViewBag.Categories)
                    {
                        <option value="@cat.Id">
                            @cat.Name
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @* datetimepicker script *@
        <script>
            $(function () {                
                $('#Date').removeAttr("data-val-date");
                $('#Date').datetimepicker({
                    format: 'DD/MM/YYYY HH:mm',
                    sideBySide: false,
                    showTodayButton: true
                });
            });
        </script>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="Author_Id">
                    @* Post Owner first in list *@
                    <option value="@ViewBag.Owner.Id">
                        @if (ViewBag.Owner.FullName != null)
                        {
                            @ViewBag.Owner.FullName @:(@ViewBag.Owner.UserName)
                            }
                        else
                        { @ViewBag.Owner.UserName  }
                    </option>  
                    @foreach (var author in ViewBag.Authors)
                    {
                        <option value="@author.Id">
                            @if (author.FullName != null)
                            {
                                @author.FullName @:(@author.UserName)
                            }
                            else
                            { 
                                @author.UserName  
                            }
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsRecommended, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsRecommended, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                @Html.ValidationMessageFor(model => model.IsRecommended, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval") @*client-side form validation*@
    @Scripts.Render("~/bundles/bootstrap-datetimepicker") @* Datetimepicker bundle *@
}

@section styles {
    @Styles.Render("~/Content/bootstrap-datetimepicker") @* Datetimepicker style *@
}