@*@model IEnumerable<Music_Society_Forum.Models.Post>*@
    
@* Paging Links References *@
@model PagedList.IPagedList<Music_Society_Forum.Models.Post> 
@using Music_Society_Forum.Classes;
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "My Reviews";
}

<h2 class="view-header">@ViewBag.Title (@Model.Count())</h2>

<p>
    @Html.ActionLink("Create New", "Create", "Posts")
</p>

@* Search *@
@using (Html.BeginForm("Posts", "My", FormMethod.Get))
{
    <p class="search">
        @Html.TextBox("searchString", (string)ViewBag.CurrentFilter)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        @* Column Sorting Links & Paging Links *@
        <th>@Html.ActionLink("Title", "Posts", new { sortOrder = ViewBag.TitleSortParam, currentFilter = ViewBag.CurrentFilter })</th>
        <th>Content</th>
        <th>@Html.ActionLink("Date", "Posts", new { sortOrder = ViewBag.DateSortParam, currentFilter = ViewBag.CurrentFilter })</th>
        <th>@Html.ActionLink("Author", "Posts", new { sortOrder = ViewBag.AuthorSortParam, currentFilter = ViewBag.CurrentFilter })</th>
        <th>@Html.ActionLink("Comments", "Posts", new { sortOrder = ViewBag.CommentsSortParam, currentFilter = ViewBag.CurrentFilter })</th>
        @if (ViewBag.IsAdmin)
        {
            <th>Recommended</th>
        }
        <th>Actions</th> 
    </tr>

@foreach (var post in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => post.Title)
        </td>
        <td>
            @Html.Raw(Utils.CutText(post.Body))
        </td>
        <td>
            @Html.DisplayFor(modelItem => post.Date)
        </td>
        <td>
            @if (post.Author != null)
            {
                if (post.Author.FullName != null)
                {
                    @Html.DisplayFor(modelItem => post.Author.FullName)
                    @:(@Html.DisplayFor(modelItem => post.Author.UserName))
                }
                else
                {
                    @Html.DisplayFor(modelItem => post.Author.UserName)
                }
            }
            else
            {
                <i>Undisclosed author</i>
            }
        </td>
        <td>
            @post.Comments.Count
        </td>
        @if (ViewBag.IsAdmin)
        {
            <td>
                @Html.DisplayFor(modelItem => post.IsRecommended)
            </td>
        }        
        <td>
            @Html.ActionLink("Details", "../Posts/Details", new { id = post.Id })

            @*  Admins can edit and delete ALL Posts, 
                post Owners can edit their own posts, and delete posts without comments. *@
            @if (ViewBag.IsAdmin)
            {
                @: | @Html.ActionLink("Edit", "../Admin/Edit", new { id = post.Id })
                @: | @Html.ActionLink("Delete", "../Posts/Delete", new { id = post.Id })
            }
            else if (post.Author_Id != null &&
                     post.Author.UserName == User.Identity.Name)
            {                
                @: | @Html.ActionLink("Edit", "../Posts/Edit", new { id = post.Id })
                if (post.Comments.Count == 0)
                {
                    @: | @Html.ActionLink("Delete", "..Posts/Delete", new { id = post.Id })
                }
            }
        </td>
    </tr>
}
</table>

@* Paging Links *@
<hr />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Posts",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))